// Code generated by protoc-gen-go.
// source: pbaminoapi.proto
// DO NOT EDIT!

/*
Package pbaminoapi is a generated protocol buffer package.

It is generated from these files:
	pbaminoapi.proto

It has these top-level messages:
	CreateEnvironmentRequest
	ChartVariableOverride
	CreateEnvironmentResponse
	DestroyEnvironmentRequest
	DestroyEnvironmentResponse
	EnvironmentStatusRequest
	EnvironmentStatusResponse
	GetEnvironmentsRequest
	GetEnvironmentsResponse
	Environment
*/
package pbaminoapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateEnvironmentRequest struct {
	Name                           string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DeploymentTags                 map[string]string        `protobuf:"bytes,2,rep,name=deployment_tags,json=deploymentTags" json:"deployment_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	JobTags                        map[string]string        `protobuf:"bytes,3,rep,name=job_tags,json=jobTags" json:"job_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	GithubProjectName              string                   `protobuf:"bytes,4,opt,name=github_project_name,json=githubProjectName" json:"github_project_name,omitempty"`
	GithubProjectRef               string                   `protobuf:"bytes,5,opt,name=github_project_ref,json=githubProjectRef" json:"github_project_ref,omitempty"`
	ChartVariableOverrides         []*ChartVariableOverride `protobuf:"bytes,6,rep,name=chart_variable_overrides,json=chartVariableOverrides" json:"chart_variable_overrides,omitempty"`
	GithubProjectDirectoryOverride string                   `protobuf:"bytes,7,opt,name=github_project_directory_override,json=githubProjectDirectoryOverride" json:"github_project_directory_override,omitempty"`
	LocalProjectDirectoryOverride  string                   `protobuf:"bytes,8,opt,name=local_project_directory_override,json=localProjectDirectoryOverride" json:"local_project_directory_override,omitempty"`
}

func (m *CreateEnvironmentRequest) Reset()                    { *m = CreateEnvironmentRequest{} }
func (m *CreateEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEnvironmentRequest) ProtoMessage()               {}
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateEnvironmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetDeploymentTags() map[string]string {
	if m != nil {
		return m.DeploymentTags
	}
	return nil
}

func (m *CreateEnvironmentRequest) GetJobTags() map[string]string {
	if m != nil {
		return m.JobTags
	}
	return nil
}

func (m *CreateEnvironmentRequest) GetGithubProjectName() string {
	if m != nil {
		return m.GithubProjectName
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetGithubProjectRef() string {
	if m != nil {
		return m.GithubProjectRef
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetChartVariableOverrides() []*ChartVariableOverride {
	if m != nil {
		return m.ChartVariableOverrides
	}
	return nil
}

func (m *CreateEnvironmentRequest) GetGithubProjectDirectoryOverride() string {
	if m != nil {
		return m.GithubProjectDirectoryOverride
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetLocalProjectDirectoryOverride() string {
	if m != nil {
		return m.LocalProjectDirectoryOverride
	}
	return ""
}

type ChartVariableOverride struct {
	ChartName    string `protobuf:"bytes,1,opt,name=chart_name,json=chartName" json:"chart_name,omitempty"`
	VariableName string `protobuf:"bytes,2,opt,name=variable_name,json=variableName" json:"variable_name,omitempty"`
	Value        string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *ChartVariableOverride) Reset()                    { *m = ChartVariableOverride{} }
func (m *ChartVariableOverride) String() string            { return proto.CompactTextString(m) }
func (*ChartVariableOverride) ProtoMessage()               {}
func (*ChartVariableOverride) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChartVariableOverride) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *ChartVariableOverride) GetVariableName() string {
	if m != nil {
		return m.VariableName
	}
	return ""
}

func (m *ChartVariableOverride) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CreateEnvironmentResponse struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (m *CreateEnvironmentResponse) Reset()                    { *m = CreateEnvironmentResponse{} }
func (m *CreateEnvironmentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateEnvironmentResponse) ProtoMessage()               {}
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateEnvironmentResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateEnvironmentResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateEnvironmentResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type DestroyEnvironmentRequest struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	RmDns bool   `protobuf:"varint,2,opt,name=rm_dns,json=rmDns" json:"rm_dns,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *DestroyEnvironmentRequest) Reset()                    { *m = DestroyEnvironmentRequest{} }
func (m *DestroyEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*DestroyEnvironmentRequest) ProtoMessage()               {}
func (*DestroyEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DestroyEnvironmentRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DestroyEnvironmentRequest) GetRmDns() bool {
	if m != nil {
		return m.RmDns
	}
	return false
}

func (m *DestroyEnvironmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DestroyEnvironmentResponse struct {
}

func (m *DestroyEnvironmentResponse) Reset()                    { *m = DestroyEnvironmentResponse{} }
func (m *DestroyEnvironmentResponse) String() string            { return proto.CompactTextString(m) }
func (*DestroyEnvironmentResponse) ProtoMessage()               {}
func (*DestroyEnvironmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type EnvironmentStatusRequest struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *EnvironmentStatusRequest) Reset()                    { *m = EnvironmentStatusRequest{} }
func (m *EnvironmentStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*EnvironmentStatusRequest) ProtoMessage()               {}
func (*EnvironmentStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EnvironmentStatusRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EnvironmentStatusRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EnvironmentStatusResponse struct {
	Id                     int64            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                   string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State                  string           `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	AllDeployments         []string         `protobuf:"bytes,4,rep,name=all_deployments,json=allDeployments" json:"all_deployments,omitempty"`
	AvailableDeployments   []string         `protobuf:"bytes,5,rep,name=available_deployments,json=availableDeployments" json:"available_deployments,omitempty"`
	UnavailableDeployments []string         `protobuf:"bytes,6,rep,name=unavailable_deployments,json=unavailableDeployments" json:"unavailable_deployments,omitempty"`
	ActiveJobs             []string         `protobuf:"bytes,7,rep,name=active_jobs,json=activeJobs" json:"active_jobs,omitempty"`
	AllJobs                []string         `protobuf:"bytes,8,rep,name=all_jobs,json=allJobs" json:"all_jobs,omitempty"`
	CompletedJobs          []string         `protobuf:"bytes,9,rep,name=completed_jobs,json=completedJobs" json:"completed_jobs,omitempty"`
	FailedJobs             []string         `protobuf:"bytes,10,rep,name=failed_jobs,json=failedJobs" json:"failed_jobs,omitempty"`
	ServiceToExposedPort   map[string]int64 `protobuf:"bytes,11,rep,name=service_to_exposed_port,json=serviceToExposedPort" json:"service_to_exposed_port,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AllPods                []string         `protobuf:"bytes,12,rep,name=all_pods,json=allPods" json:"all_pods,omitempty"`
	KubernetesNamespace    string           `protobuf:"bytes,13,opt,name=kubernetes_namespace,json=kubernetesNamespace" json:"kubernetes_namespace,omitempty"`
	ErroredAt              int64            `protobuf:"varint,14,opt,name=errored_at,json=erroredAt" json:"errored_at,omitempty"`
	Error                  string           `protobuf:"bytes,15,opt,name=error" json:"error,omitempty"`
}

func (m *EnvironmentStatusResponse) Reset()                    { *m = EnvironmentStatusResponse{} }
func (m *EnvironmentStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*EnvironmentStatusResponse) ProtoMessage()               {}
func (*EnvironmentStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *EnvironmentStatusResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EnvironmentStatusResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvironmentStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *EnvironmentStatusResponse) GetAllDeployments() []string {
	if m != nil {
		return m.AllDeployments
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetAvailableDeployments() []string {
	if m != nil {
		return m.AvailableDeployments
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetUnavailableDeployments() []string {
	if m != nil {
		return m.UnavailableDeployments
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetActiveJobs() []string {
	if m != nil {
		return m.ActiveJobs
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetAllJobs() []string {
	if m != nil {
		return m.AllJobs
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetCompletedJobs() []string {
	if m != nil {
		return m.CompletedJobs
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetFailedJobs() []string {
	if m != nil {
		return m.FailedJobs
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetServiceToExposedPort() map[string]int64 {
	if m != nil {
		return m.ServiceToExposedPort
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetAllPods() []string {
	if m != nil {
		return m.AllPods
	}
	return nil
}

func (m *EnvironmentStatusResponse) GetKubernetesNamespace() string {
	if m != nil {
		return m.KubernetesNamespace
	}
	return ""
}

func (m *EnvironmentStatusResponse) GetErroredAt() int64 {
	if m != nil {
		return m.ErroredAt
	}
	return 0
}

func (m *EnvironmentStatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetEnvironmentsRequest struct {
	State string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *GetEnvironmentsRequest) Reset()                    { *m = GetEnvironmentsRequest{} }
func (m *GetEnvironmentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentsRequest) ProtoMessage()               {}
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetEnvironmentsRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type GetEnvironmentsResponse struct {
	Environments []*Environment `protobuf:"bytes,1,rep,name=environments" json:"environments,omitempty"`
}

func (m *GetEnvironmentsResponse) Reset()                    { *m = GetEnvironmentsResponse{} }
func (m *GetEnvironmentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentsResponse) ProtoMessage()               {}
func (*GetEnvironmentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetEnvironmentsResponse) GetEnvironments() []*Environment {
	if m != nil {
		return m.Environments
	}
	return nil
}

type Environment struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State         string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	CreatedAt     int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt     int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Active        bool   `protobuf:"varint,6,opt,name=active" json:"active,omitempty"`
	KubeNamespace string `protobuf:"bytes,7,opt,name=kube_namespace,json=kubeNamespace" json:"kube_namespace,omitempty"`
}

func (m *Environment) Reset()                    { *m = Environment{} }
func (m *Environment) String() string            { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()               {}
func (*Environment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Environment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Environment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Environment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Environment) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Environment) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Environment) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Environment) GetKubeNamespace() string {
	if m != nil {
		return m.KubeNamespace
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateEnvironmentRequest)(nil), "CreateEnvironmentRequest")
	proto.RegisterType((*ChartVariableOverride)(nil), "ChartVariableOverride")
	proto.RegisterType((*CreateEnvironmentResponse)(nil), "CreateEnvironmentResponse")
	proto.RegisterType((*DestroyEnvironmentRequest)(nil), "DestroyEnvironmentRequest")
	proto.RegisterType((*DestroyEnvironmentResponse)(nil), "DestroyEnvironmentResponse")
	proto.RegisterType((*EnvironmentStatusRequest)(nil), "EnvironmentStatusRequest")
	proto.RegisterType((*EnvironmentStatusResponse)(nil), "EnvironmentStatusResponse")
	proto.RegisterType((*GetEnvironmentsRequest)(nil), "GetEnvironmentsRequest")
	proto.RegisterType((*GetEnvironmentsResponse)(nil), "GetEnvironmentsResponse")
	proto.RegisterType((*Environment)(nil), "Environment")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AminoAPI service

type AminoAPIClient interface {
	CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*CreateEnvironmentResponse, error)
	DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentResponse, error)
	EnvironmentStatus(ctx context.Context, in *EnvironmentStatusRequest, opts ...grpc.CallOption) (*EnvironmentStatusResponse, error)
	GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsResponse, error)
}

type aminoAPIClient struct {
	cc *grpc.ClientConn
}

func NewAminoAPIClient(cc *grpc.ClientConn) AminoAPIClient {
	return &aminoAPIClient{cc}
}

func (c *aminoAPIClient) CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*CreateEnvironmentResponse, error) {
	out := new(CreateEnvironmentResponse)
	err := grpc.Invoke(ctx, "/AminoAPI/CreateEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aminoAPIClient) DestroyEnvironment(ctx context.Context, in *DestroyEnvironmentRequest, opts ...grpc.CallOption) (*DestroyEnvironmentResponse, error) {
	out := new(DestroyEnvironmentResponse)
	err := grpc.Invoke(ctx, "/AminoAPI/DestroyEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aminoAPIClient) EnvironmentStatus(ctx context.Context, in *EnvironmentStatusRequest, opts ...grpc.CallOption) (*EnvironmentStatusResponse, error) {
	out := new(EnvironmentStatusResponse)
	err := grpc.Invoke(ctx, "/AminoAPI/EnvironmentStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aminoAPIClient) GetEnvironments(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*GetEnvironmentsResponse, error) {
	out := new(GetEnvironmentsResponse)
	err := grpc.Invoke(ctx, "/AminoAPI/GetEnvironments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AminoAPI service

type AminoAPIServer interface {
	CreateEnvironment(context.Context, *CreateEnvironmentRequest) (*CreateEnvironmentResponse, error)
	DestroyEnvironment(context.Context, *DestroyEnvironmentRequest) (*DestroyEnvironmentResponse, error)
	EnvironmentStatus(context.Context, *EnvironmentStatusRequest) (*EnvironmentStatusResponse, error)
	GetEnvironments(context.Context, *GetEnvironmentsRequest) (*GetEnvironmentsResponse, error)
}

func RegisterAminoAPIServer(s *grpc.Server, srv AminoAPIServer) {
	s.RegisterService(&_AminoAPI_serviceDesc, srv)
}

func _AminoAPI_CreateEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AminoAPIServer).CreateEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AminoAPI/CreateEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AminoAPIServer).CreateEnvironment(ctx, req.(*CreateEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AminoAPI_DestroyEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AminoAPIServer).DestroyEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AminoAPI/DestroyEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AminoAPIServer).DestroyEnvironment(ctx, req.(*DestroyEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AminoAPI_EnvironmentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnvironmentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AminoAPIServer).EnvironmentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AminoAPI/EnvironmentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AminoAPIServer).EnvironmentStatus(ctx, req.(*EnvironmentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AminoAPI_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AminoAPIServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AminoAPI/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AminoAPIServer).GetEnvironments(ctx, req.(*GetEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AminoAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AminoAPI",
	HandlerType: (*AminoAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEnvironment",
			Handler:    _AminoAPI_CreateEnvironment_Handler,
		},
		{
			MethodName: "DestroyEnvironment",
			Handler:    _AminoAPI_DestroyEnvironment_Handler,
		},
		{
			MethodName: "EnvironmentStatus",
			Handler:    _AminoAPI_EnvironmentStatus_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _AminoAPI_GetEnvironments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pbaminoapi.proto",
}

func init() { proto.RegisterFile("pbaminoapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 899 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0x8e, 0xed, 0xd8, 0xb1, 0x8f, 0x1d, 0x27, 0xdd, 0x38, 0xce, 0x5a, 0x50, 0x1a, 0xc4, 0x00,
	0xb9, 0x00, 0x0d, 0xb4, 0xcc, 0xc0, 0xf4, 0x82, 0x19, 0x4f, 0x13, 0x32, 0x2d, 0x4c, 0xeb, 0x51,
	0x4b, 0x6e, 0x35, 0x2b, 0x69, 0x93, 0x2a, 0x91, 0xb5, 0xea, 0xee, 0xda, 0x83, 0xdf, 0x81, 0x17,
	0xe1, 0x29, 0xb8, 0xe1, 0xc1, 0x18, 0x9d, 0x95, 0x65, 0x25, 0x91, 0xca, 0x30, 0xb9, 0xf3, 0x9e,
	0xef, 0xdb, 0xef, 0x9c, 0x3d, 0x7f, 0x16, 0xec, 0xa7, 0x3e, 0x9b, 0x47, 0x89, 0x60, 0x69, 0xe4,
	0xa4, 0x52, 0x68, 0x61, 0xff, 0xd9, 0x06, 0xfa, 0x42, 0x72, 0xa6, 0xf9, 0x59, 0xb2, 0x8c, 0xa4,
	0x48, 0xe6, 0x3c, 0xd1, 0x2e, 0xff, 0xb0, 0xe0, 0x4a, 0x13, 0x02, 0xdb, 0x09, 0x9b, 0x73, 0xda,
	0x38, 0x6e, 0x9c, 0xf4, 0x5c, 0xfc, 0x4d, 0x2e, 0x60, 0x2f, 0xe4, 0x69, 0x2c, 0x56, 0x19, 0xd1,
	0xd3, 0xec, 0x4a, 0xd1, 0xe6, 0x71, 0xeb, 0xa4, 0xff, 0xf4, 0x5b, 0xa7, 0x4e, 0xc7, 0x39, 0x2d,
	0x2e, 0xbc, 0x63, 0x57, 0xea, 0x2c, 0xd1, 0x72, 0xe5, 0x0e, 0xc3, 0x5b, 0x46, 0x32, 0x85, 0xee,
	0xb5, 0xf0, 0x8d, 0x60, 0x0b, 0x05, 0xbf, 0xaa, 0x17, 0x7c, 0x25, 0xfc, 0x8d, 0xd2, 0xce, 0xb5,
	0x39, 0x11, 0x07, 0x0e, 0xae, 0x22, 0xfd, 0x7e, 0xe1, 0x7b, 0xa9, 0x14, 0xd7, 0x3c, 0xd0, 0x1e,
	0x46, 0xbf, 0x8d, 0xd1, 0x3f, 0x32, 0xd0, 0xcc, 0x20, 0xaf, 0xb3, 0xa7, 0x7c, 0x03, 0xe4, 0x0e,
	0x5f, 0xf2, 0x4b, 0xda, 0x46, 0xfa, 0xfe, 0x2d, 0xba, 0xcb, 0x2f, 0xc9, 0x0c, 0x68, 0xf0, 0x9e,
	0x49, 0xed, 0x2d, 0x99, 0x8c, 0x98, 0x1f, 0x73, 0x4f, 0x2c, 0xb9, 0x94, 0x51, 0xc8, 0x15, 0xed,
	0x60, 0xc0, 0x63, 0xe7, 0x45, 0x46, 0xb8, 0xc8, 0xf1, 0x37, 0x39, 0xec, 0x8e, 0x83, 0x2a, 0xb3,
	0x22, 0x2f, 0xe1, 0xf3, 0x3b, 0xfe, 0xc3, 0x48, 0xf2, 0x40, 0x0b, 0xb9, 0x2a, 0xb4, 0xe9, 0x0e,
	0x86, 0xf3, 0xd9, 0xad, 0x70, 0x4e, 0xd7, 0xb4, 0xb5, 0x16, 0x39, 0x87, 0xe3, 0x58, 0x04, 0x2c,
	0xfe, 0x98, 0x52, 0x17, 0x95, 0x1e, 0x23, 0xaf, 0x4e, 0xc8, 0x9a, 0xc2, 0x41, 0x45, 0xb5, 0xc8,
	0x3e, 0xb4, 0x6e, 0xf8, 0x2a, 0x6f, 0x84, 0xec, 0x27, 0x19, 0x41, 0x7b, 0xc9, 0xe2, 0x05, 0xa7,
	0x4d, 0xb4, 0x99, 0xc3, 0xf3, 0xe6, 0x4f, 0x0d, 0xeb, 0x39, 0x0c, 0xca, 0xf5, 0xf9, 0x3f, 0x77,
	0xed, 0x0f, 0x70, 0x58, 0x99, 0x43, 0xf2, 0x18, 0xc0, 0x64, 0xbf, 0xd4, 0x90, 0x3d, 0xb4, 0x60,
	0x29, 0xbf, 0x80, 0xdd, 0xa2, 0x2c, 0xc8, 0x30, 0xca, 0x83, 0xb5, 0x11, 0x49, 0x85, 0xdb, 0x56,
	0xc9, 0xad, 0xfd, 0x3b, 0x4c, 0x2a, 0xfa, 0x4c, 0xa5, 0x22, 0x51, 0x9c, 0x0c, 0xa1, 0x19, 0x85,
	0xe8, 0xae, 0xe5, 0x36, 0xa3, 0xb0, 0x98, 0x88, 0x66, 0x69, 0x22, 0x46, 0xd0, 0x56, 0x9a, 0xe9,
	0x42, 0x16, 0x0f, 0xf6, 0x05, 0x4c, 0x4e, 0xb9, 0xd2, 0x52, 0xac, 0x2a, 0x06, 0xeb, 0xae, 0xec,
	0x21, 0x74, 0xe4, 0xdc, 0x0b, 0x13, 0x85, 0xc2, 0x5d, 0xb7, 0x2d, 0xe7, 0xa7, 0x89, 0x2a, 0xbc,
	0xb5, 0x36, 0xde, 0xec, 0x4f, 0xc1, 0xaa, 0xd2, 0x35, 0xf1, 0xda, 0x3f, 0x03, 0x2d, 0x99, 0xdf,
	0x6a, 0xa6, 0x17, 0xaa, 0xce, 0x69, 0xc5, 0x5b, 0xec, 0xbf, 0xda, 0x30, 0xa9, 0x10, 0x78, 0x68,
	0x36, 0xc8, 0xd7, 0xb0, 0xc7, 0xe2, 0xd8, 0xdb, 0xcc, 0xbc, 0xa2, 0xdb, 0xc7, 0xad, 0x93, 0x9e,
	0x3b, 0x64, 0x71, 0xbc, 0x69, 0x38, 0x45, 0x9e, 0xc1, 0x21, 0x5b, 0xb2, 0x28, 0xc6, 0x4a, 0x96,
	0xe9, 0x6d, 0xa4, 0x8f, 0x0a, 0xb0, 0x7c, 0xe9, 0x47, 0x38, 0x5a, 0x24, 0xd5, 0xd7, 0x3a, 0x78,
	0x6d, 0x5c, 0x82, 0xcb, 0x17, 0x9f, 0x40, 0x9f, 0x05, 0x3a, 0x5a, 0x72, 0xef, 0x5a, 0xf8, 0x8a,
	0xee, 0x20, 0x19, 0x8c, 0xe9, 0x95, 0xf0, 0x15, 0x99, 0x40, 0x37, 0x8b, 0x1b, 0xd1, 0x2e, 0xa2,
	0x3b, 0x2c, 0x8e, 0x11, 0xfa, 0x12, 0x86, 0x81, 0x98, 0xa7, 0x31, 0xd7, 0x3c, 0x34, 0x84, 0x1e,
	0x12, 0x76, 0x0b, 0x2b, 0xd2, 0x9e, 0x40, 0xff, 0x92, 0x45, 0xf1, 0x9a, 0x03, 0xc6, 0x85, 0x31,
	0x21, 0xe1, 0x06, 0x8e, 0x14, 0x97, 0xcb, 0x28, 0xe0, 0x9e, 0x16, 0x1e, 0xff, 0x23, 0x15, 0x8a,
	0x87, 0x5e, 0x2a, 0xa4, 0xa6, 0x7d, 0x5c, 0x2b, 0x3f, 0x38, 0xb5, 0x15, 0x71, 0xde, 0x9a, 0x9b,
	0xef, 0xc4, 0x99, 0xb9, 0x37, 0x13, 0x52, 0x9b, 0xad, 0x38, 0x52, 0x15, 0xd0, 0xfa, 0x3d, 0xa9,
	0x08, 0x15, 0x1d, 0x14, 0xef, 0x99, 0x89, 0x50, 0x91, 0xef, 0x61, 0x74, 0xb3, 0xf0, 0xb9, 0x4c,
	0xb8, 0xe6, 0x0a, 0x87, 0x48, 0xa5, 0x2c, 0xe0, 0x74, 0x17, 0xeb, 0x78, 0xb0, 0xc1, 0x5e, 0xaf,
	0xa1, 0x6c, 0x28, 0xb9, 0x94, 0x42, 0xf2, 0xd0, 0x63, 0x9a, 0x0e, 0xb1, 0x2f, 0x7a, 0xb9, 0x65,
	0xaa, 0xb3, 0x56, 0xc0, 0x03, 0xdd, 0x33, 0xad, 0x80, 0x07, 0xeb, 0x1c, 0x26, 0xb5, 0x51, 0xff,
	0xd7, 0xae, 0x68, 0x95, 0x77, 0x85, 0x03, 0xe3, 0x73, 0xae, 0x4b, 0xb9, 0x29, 0x3a, 0xbd, 0xe8,
	0xc1, 0x46, 0x79, 0x22, 0x7f, 0x85, 0xa3, 0x7b, 0xfc, 0xbc, 0xb1, 0xbf, 0x83, 0x01, 0x2f, 0xd9,
	0x69, 0x03, 0x13, 0x3f, 0x28, 0x27, 0xde, 0xbd, 0xc5, 0xb0, 0xff, 0x69, 0x40, 0xbf, 0x84, 0x3e,
	0x60, 0x34, 0xb2, 0xcd, 0x86, 0xfb, 0x07, 0x93, 0xb8, 0x6d, 0x92, 0x98, 0x5b, 0xa6, 0x3a, 0x83,
	0x17, 0x69, 0xb8, 0x86, 0xdb, 0x06, 0xce, 0x2d, 0x53, 0x4d, 0xc6, 0xd0, 0x31, 0xed, 0x4a, 0x3b,
	0xb8, 0x39, 0xf2, 0x53, 0xd6, 0x9d, 0x59, 0xc5, 0x4a, 0x75, 0x34, 0x7f, 0x24, 0xbb, 0x99, 0xb5,
	0xa8, 0xe0, 0xd3, 0xbf, 0x9b, 0xd0, 0x9d, 0x66, 0x5f, 0x04, 0xd3, 0xd9, 0x4b, 0xf2, 0x1b, 0x3c,
	0xba, 0xb7, 0x09, 0xc9, 0xa4, 0xf6, 0x5f, 0xd8, 0xb2, 0x9c, 0xda, 0xc5, 0x69, 0x6f, 0x91, 0x37,
	0x40, 0xee, 0x2f, 0x2a, 0x62, 0x39, 0xb5, 0x5b, 0xd1, 0xfa, 0xc4, 0xf9, 0xc8, 0x66, 0xdb, 0xca,
	0xc2, 0xbb, 0x37, 0x08, 0x64, 0xe2, 0xd4, 0xed, 0x3b, 0xcb, 0xaa, 0x9f, 0x1b, 0x7b, 0x8b, 0xfc,
	0x02, 0x7b, 0x77, 0xba, 0x81, 0x1c, 0x39, 0xd5, 0xfd, 0x64, 0x51, 0xa7, 0xa6, 0x71, 0xec, 0x2d,
	0xbf, 0x83, 0xdf, 0x51, 0xcf, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x33, 0xce, 0xe9, 0x25, 0x5b,
	0x09, 0x00, 0x00,
}
