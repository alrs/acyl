// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/acyl/pkg/locker (interfaces: LockFactory)

package locker

import (
	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/consul/api"
)

// Mock of LockFactory interface
type MockLockFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockLockFactoryRecorder
}

// Recorder for MockLockFactory (not exported)
type _MockLockFactoryRecorder struct {
	mock *MockLockFactory
}

func NewMockLockFactory(ctrl *gomock.Controller) *MockLockFactory {
	mock := &MockLockFactory{ctrl: ctrl}
	mock.recorder = &_MockLockFactoryRecorder{mock}
	return mock
}

func (_m *MockLockFactory) EXPECT() *_MockLockFactoryRecorder {
	return _m.recorder
}

func (_m *MockLockFactory) LockOpts(_param0 *api.LockOptions) (PreemptableLock, error) {
	ret := _m.ctrl.Call(_m, "LockOpts", _param0)
	ret0, _ := ret[0].(PreemptableLock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLockFactoryRecorder) LockOpts(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LockOpts", arg0)
}
